name: RIBsReactorKit
attributes:
  ORGANIZATIONNAME: Elon
options:
  bundleIdPrefix: com.elonparks
  deploymentTarget:
    iOS: 13.0
  defaultConfig: Release
  indentWidth: 2
  tabWidth: 2
  useBaseInternationalization: true
  createIntermediateGroups: true
  groupSortPosition: top
  groupOrdering: 
    - order: [Source, Resource]
settings:
  base:
    VERSIONING_SYSTEM: Apple Generic
    "EXCLUDED_ARCHS[sdk=iphonesimulator*]": arm64

targets:
  RIBsReactorKit:
    type: application
    platform: iOS
    settings:
      base:
        INFOPLIST_FILE: RIBsReactorKit/Resource/SupportingFiles/Info.plist
        PRODUCT_BUNDLE_IDENTIFIER: com.elonparks.RIBsReactorKit
        PRODUCT_NAME: $(TARGET_NAME)
        FRAMEWORK_SEARCH_PATHS: $(inherited)
        CODE_SIGN_STYLE: Automatic
      configs:
        debug:
          DEVELOPMENT_TEAM: M77W68G9P5
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG
        release:
          DEVELOPMENT_TEAM: M77W68G9P5
    sources:
      - path: RIBsReactorKit
    preBuildScripts:
      - name: SwiftGen
        script: |
          export PATH="$PATH:/opt/homebrew/bin"
          if which swiftgen > /dev/null; then
            if [[ "$(uname -m)" == 'arm64' ]]; then
              arch -x86_64 swiftgen
            else
              swiftgen
            fi
          else
            echo "warning: SwiftGen not installed, download it from https://github.com/SwiftGen/SwiftGen"
          fi
      - name: Needle
        script: |
          SOURCE_ROOT="RIBsReactorKit/Source"
          FILE_PATH="${SOURCE_ROOT}/Presentation/Utilities/Generated"
          export PATH="$PATH:/opt/homebrew/bin"
          export SOURCEKIT_LOGGING=0 && needle generate ${FILE_PATH}/NeedleGenerated.swift ${SOURCE_ROOT}/
    postBuildScripts:
      - name: SwiftFormat
        script: |
          export PATH="$PATH:/opt/homebrew/bin"
          if which swiftformat >/dev/null; then
            swiftformat .
          else
            echo "warning: SwiftFormat not installed, download from https://github.com/nicklockwood/SwiftFormat"
          fi
      - name: SwiftLint
        script: |
          export PATH="$PATH:/opt/homebrew/bin"
          if which swiftlint > /dev/null; then
            swiftlint
          else
            echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
          fi
      - name: Acknowledgements
        script: "${SRCROOT}/Scripts/AckAck/ackack.py"
    scheme:
      testTargets:
        - RIBsReactorKitTests
      stopOnEveryMainThreadCheckerIssue: true
      gatherCoverageData: true

  RIBsReactorKitTests:
    type: bundle.unit-test
    platform: iOS
    settings:
      base:
        CODE_SIGN_STYLE: Automatic
    sources:
      - RIBsReactorKitTests
    dependencies:
      - target: RIBsReactorKit

  RIBsReactorKitUITests:
    type: bundle.ui-testing
    platform: iOS
    settings:
      base:
        INFOPLIST_FILE: RIBsReactorKitUITests/Info.plist
        PRODUCT_NAME: $(TARGET_NAME)
    sources:
      - RIBsReactorKitUITests
    dependencies:
      - target: RIBsReactorKit

schemes:
  RIBsReactorKitTests:
    build:
      targets:
        RIBsReactorKitTests: [test]
    test:
      targets:
        - name: RIBsReactorKitTests
          parallelizable: true

  RIBsReactorKitUITests:
    build:
      targets:
        RIBsReactorKitUITests: [test]
    test:
      targets:
        - RIBsReactorKitUITests